<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:social="http://www.springframework.org/schema/social"
	xmlns:facebook="http://www.springframework.org/schema/social/facebook"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/social/facebook http://www.springframework.org/schema/social/spring-social-facebook.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/social http://www.springframework.org/schema/social/spring-social-1.1.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 다른 dispatcher servlet도 사용 가능한 공통 관리 객체 등록 -->

	<!-- Connetcion pool(DataSource) 설정 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="oracle.jdbc.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@106.253.56.122:1521:orcl" />
		<property name="user" value="iot1_motion"></property>
		<property name="password" value="iot1_motion"></property>
		<property name="maxPoolSize" value="1"></property>
		<property name="initialPoolSize" value="1"></property>
		<property name="acquireIncrement" value="1"></property>
		<property name="minPoolSize" value="1"></property>
	</bean>

	<!--jdbc Template 설정 -->
	<bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--Mybatis 설정 -->
	<bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 각 객체마다 매퍼 xml파일을 저장한다. -->
		<property name="mapperLocations" value="/WEB-INF/mybatis/*.xml" />
	</bean>

	<!-- 기본생성자가 아니기 때문에 생성자주입을 한다. Mybatis를 쓰기위한 스프링 설정파일 -->
	<bean name="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!--트랜잭션설정 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!--트랜잭션을 위한 커넥션풀 설정 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--@Transactional을 사용하기 위해 annotation-driven설정 -->
	<tx:annotation-driven />
	<!-- Spring Social Beans -->
	<bean id="connectionFactoryLocator"
		class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
		<property name="connectionFactories">
			<list>
				<bean 
					class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
					<constructor-arg value="${spring.social.facebook.appId}" />
					<constructor-arg value="${spring.social.facebook.appSecret}" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="connectionFactory"
		class="org.springframework.social.facebook.connect.FacebookConnectionFactory">

		<constructor-arg value="${spring.social.facebook.appId}" />
		<constructor-arg value="${spring.social.facebook.appSecret}" />
	</bean>
	<!-- Property Resolver -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:application.properties" />
	</bean>
	<bean id="connectionRepository" factory-method="createConnectionRepository"
		factory-bean="usersConnectionRepository" scope="request">
		<constructor-arg value="admin" />
		<aop:scoped-proxy proxy-target-class="false" />
	</bean>
	<social:jdbc-connection-repository />

	<bean id="usersConnectionRepository"
		class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository">
		<constructor-arg ref="dataSource" />
		<constructor-arg ref="connectionFactoryLocator" />
		<constructor-arg ref="textEncryptor" />
	</bean>

	<bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors"
		factory-method="noOpText" />

	<!-- This bean determines the account ID of the user. The example application 
		uses the username as the account ID. -->
	<bean id="userIdSource"
		class="org.springframework.social.security.AuthenticationNameUserIdSource" />
		
	<bean id="oAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<property name="scope" value="${spring.social.facebook.app.scope}"></property>
		<property name="redirectUri" value="${spring.social.facebook.redirect.uri}" />
	</bean>



</beans>
